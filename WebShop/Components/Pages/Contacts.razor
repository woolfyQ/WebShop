@page "/Contacts"
@using System.Net.Http.Json
@using Core.Entity
@using WebShop.Services
@rendermode InteractiveServer
@layout MainLayout
@inject EmailService emailservice
@inject HttpClient Http
<PageTitle>Contacts</PageTitle>

<section class="contacts">
    <h2>Свяжитесь с нами</h2>
    <p>Мы всегда рады помочь вам с любыми вопросами. Вы можете связаться с нами по телефону или через форму ниже.</p>

    <div class="contact-info">
        <div class="contact-item">
            <h3>Адрес</h3>
            <p>Россия, Смоленск, ул. Тульский переулок, д. 9</p>
        </div>
        <div class="contact-item">
            <h3>Телефон</h3>
            <p><a href="tel:+1234567890">+7 (123) 456-78-90</a></p>
        </div>
        <div class="contact-item">
            <h3>Email</h3>
            <p><a href="mailto:info@myroof.ru">info@myroof.ru</a></p>
        </div>
    </div>

    <form class="contact-form" @onsubmit="HandleSubmit">
        <label for="name">Ваше имя</label>
        <input type="text" id="name" @bind="formData.Name" required>

        <label for="email">Ваш Email</label>
        <input type="email" id="email" @bind="formData.Email" required>

        <label for="message">Сообщение</label>
        <textarea id="message" @bind="formData.Message" rows="4" required></textarea>

        <button type="submit">Отправить сообщение</button>
    </form>

    @if (!string.IsNullOrEmpty(notificationMessage))
    {
        <p>@notificationMessage</p>
    }
</section>

@code {
    private UserMessage formData = new UserMessage(); // Данные формы
    private string notificationMessage; // Сообщение о результате отправки

    private async Task HandleSubmit()
    {
        notificationMessage = string.Empty; // Очистить предыдущее сообщение

        try
        {
            // Логируем данные, которые будут отправлены
            Console.WriteLine($"Sending message with the following data: Name: {formData.Name}, Email: {formData.Email}, Message: {formData.Message}");

            var response = await emailservice.SendEmail(formData);

            // Логируем результат
            Console.WriteLine($"Email sent success: {response}");

            if (response)
            {
                notificationMessage = "Сообщение успешно отправлено. Спасибо за ваш отзыв!";
                formData = new UserMessage(); // Очистить форму после успешной отправки
            }
            else
            {
                notificationMessage = "Не удалось отправить сообщение. Попробуйте позже.";
            }
        }
        catch (Exception ex)
        {
            // Логируем ошибку
            Console.WriteLine($"Ошибка при отправке сообщения: {ex.Message}");
            notificationMessage = $"Ошибка при отправке сообщения: {ex.Message}";
        }
    }
}

